import flet as ft

def main(page: ft.Page):
    page.title = "–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    page.vertical_alignment = ft.MainAxisAlignment.CENTER
    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER
    
    def test_notification(e):
        try:
            page.invoke_method("createNotificationChannel")
            page.invoke_method("showNotification", {
                "title": "–¢–µ—Å—Ç",
                "message": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
            })
            status.value = "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
        except Exception as ex:
            status.value = f"‚ùå –û—à–∏–±–∫–∞: {ex}"
        page.update()
    
    status = ft.Text("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–∞", size=20)
    
    page.add(
        ft.Column([
            ft.Text("–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", size=24, weight=ft.FontWeight.BOLD),
            status,
            ft.ElevatedButton("üì¢ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", on_click=test_notification),
        ], alignment=ft.MainAxisAlignment.CENTER, horizontal_alignment=ft.CrossAxisAlignment.CENTER)
    )

if __name__ == "__main__":
    ft.app(target=main)
